<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nuriggum.user.mapper.UserMapper">

    <select id="selectUserList" resultType="com.nuriggum.user.model.User">
        /* selectUserList 사용자 목록 조회 */
        select *
        from USER_INFO
        <where>
            <if test="data.companyId != null and data.companyId != 0">
                AND COMPANY_ID = #{data.companyId}
            </if>
            <if test="data.userName != null and !data.userName.equals('')">
                AND USER_NAME LIKE CONCAT('%', #{data.userName}, '%')
            </if>
            <if test="data.employeeNumber != null and !data.employeeNumber.equals('')">
                AND EMPLOYEE_NUMBER = #{data.employeeNumber}
            </if>
            <if test="data.deptName != null and !data.deptName.equals('')">
                AND DEPT_NAME LIKE CONCAT('%', #{data.deptName}, '%')
            </if>
        </where>
        <include refid="paging"></include>
    </select>

    <select id="selectUserListCount" resultType="int">
        /* selectUserListCount 사용자 목록 조회 */
        select COUNT(*) AS CNT
        from USER_INFO
        <where>
            <if test="loginId != null and !loginId.equals('')">
                AND LOWER(LOGIN_ID) LIKE CONCAT('%', LOWER(#{loginId}), '%')
            </if>
            <if test="companyId != 0">
                AND COMPANY_ID = #{companyId}
            </if>
            <if test="userName != null and !userName.equals('')">
                AND USER_NAME LIKE CONCAT('%', #{userName}, '%')
            </if>
            <if test="employeeNumber != null and !employeeNumber.equals('')">
                AND EMPLOYEE_NUMBER = #{employeeNumber}
            </if>
            <if test="deptName != null and !deptName.equals('')">
                AND DEPT_NAME LIKE CONCAT('%', #{deptName}, '%')
            </if>
        </where>
    </select>

    <select id="selectUserDuplicate" resultType="boolean">
        /* selectUserDuplicate 사용자 중복 데이터 조회 */
        select case when count(*) > 0 then true else false end
        from USER_INFO
        <where>
            <if test="loginId != null and !loginId.equals('')">
                AND LOWER(LOGIN_ID) = LOWER(#{loginId})
            </if>
        </where>
    </select>

    <select id="selectLoginUser" resultType="com.nuriggum.nuriframe.security.model.UserDetail">
        /* selectLoginUser 로그인 용 사용자 정보 조회*/
        SELECT *
        FROM USER_INFO
        WHERE LOGIN_ID = #{loginId}
    </select>

    <select id="selectUserDetail" resultType="com.nuriggum.user.model.User">
        /* selectUserDetail 사용자 정보 조회*/
        SELECT *
        FROM USER_INFO
        WHERE USER_ID = #{userId}
    </select>

    <select id="selectLoginIds" resultType="String">
        /* selectLoginIds 로그인 ID 목록 조회*/
        SELECT LOGIN_ID
        FROM USER_INFO
        <where>
            <if test="userName != null and !userName.equals('')">
                AND USER_NAME = #{userName}
            </if>
            <if test="emailAddress != null and !emailAddress.equals('')">
                AND EMAIL_ADDRESS = #{emailAddress}
            </if>
        </where>
    </select>

    <insert id="insertUser">
        /* insertUser 사용자 정보 등록 */
        INSERT INTO USER_INFO
        (
            USER_ID
            ,LOGIN_ID
            ,PASSWORD
            ,USER_NAME
            ,EMPLOYEE_NUMBER
            ,MOBILE_NUMBER
            ,EMAIL_ADDRESS
            ,DEPT_NAME
            ,POSITION_NAME
            ,COMPANY_ID
            ,AUTHORITY_ID
            ,LOGIN_FAIL_COUNT
            ,LOCK_YN
        ) VALUES
        (
            #{userId}
            ,#{loginId}
            ,#{password}
            ,#{userName}
            ,#{employeeNumber}
            ,#{mobileNumber}
            ,#{emailAddress}
            ,#{deptName}
            ,#{positionName}
            ,#{companyId}
            ,#{authorityId}
            ,0
            ,false
        )
    </insert>

    <update id="updateUserPassword">
        /* updateUserPassword 사용자 비밀번호 변경 */
        UPDATE USER_INFO
            SET PASSWORD = #{password}
        WHERE USER_ID = #{userId}
    </update>

    <update id="updateUser">
        /* updateUser 사용자 정보 변경 */
        UPDATE USER_INFO
            SET MOBILE_NUMBER = #{mobileNumber}
            ,EMAIL_ADDRESS = #{emailAddress}
            ,DEPT_NAME = #{deptName}
            ,POSITION_NAME = #{positionName}
            ,CHANGE_DATE = now()
            ,CHANGE_USER_ID = #{changeUserId}
        WHERE USER_ID = #{userId}
    </update>

    <update id="updateLoginFailCount">
        /* updateLoginFailCount 로그인 실패 횟수 변경 */
        UPDATE USER_INFO
        SET LOGIN_FAIL_COUNT = #{loginFailCount}
        WHERE USER_ID = #{userId}
    </update>

    <update id="updateUserLock">
        /* updateUserLock 계정 잠금 수정 */
        UPDATE USER_INFO
        SET LOCK_YN = #{lockYn}
        WHERE USER_ID = #{userId}
    </update>

    <sql id="paging">
        <if test="pageable.sort.sorted">
            <trim prefix="ORDER BY">
                <foreach item="order" index="i" collection="pageable.sort" separator=", ">
                    ${order.property} ${order.direction}
                </foreach>
            </trim>
        </if>
        OFFSET #{pageable.offset} ROWS FETCH NEXT #{pageable.pageSize} ROWS ONLY
    </sql>
</mapper>